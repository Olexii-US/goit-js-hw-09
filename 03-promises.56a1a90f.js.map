{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAatC,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAGpBM,EAAO,C,SAAEP,E,MAAUC,GAAO,GAG3BA,EAAM,G,CAIb,MAAMQ,EAAe,GAELC,SAASC,cAAc,SAE/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAIC,iBACmB,IAAIC,SAASF,EAAIG,eACvBC,SAAQ,CAACC,EAAOC,KAC3BV,EAAaU,GAAQD,CAAK,IAGhC,MAAME,EAAQC,OAAOZ,EAAaR,OAC5BqB,EAAWD,OAAOZ,EAAac,MAC/BC,EAAaH,OAAOZ,EAAagB,QAEvC,IAAK,IAAIC,EAAW,EAAGA,GAAYF,EAAYE,GAAY,EACxC,IAAbA,EACE3B,EAAc2B,EAAUN,GACrBO,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAGhE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClBJ,EAAA+B,OAAOG,QAAQ,sBAAoB/B,QAAiBC,MAAU,IAIhEF,EAAc2B,EAAUN,GAAUM,EAAW,GAAKJ,GAC/CK,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBJ,EAAA+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAGhE6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MACpBJ,EAAA+B,OAAOG,QAAQ,sBAAoB/B,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay}) \n    // Fulfill\n      } else {\n        reject({ position, delay}) \n    // Reject\n        }\n    }, delay); \n  });\n  return promise\n}\nconst formDataSend = {};\n\nconst formRef = document.querySelector('.form')\n\nformRef.addEventListener(\"submit\", handleSubmit)\n\nfunction handleSubmit(evt) {\n  evt.preventDefault();\n  const submitFormData = new FormData(evt.currentTarget)\n    submitFormData.forEach((value, name) => {\n        formDataSend[name] = value;        \n    });  \n  \n  const delay = Number(formDataSend.delay)\n  const formStep = Number(formDataSend.step)\n  const formAmount = Number(formDataSend.amount)\n\n  for (let position = 1; position <= formAmount; position += 1){\n    if (position === 1) {\n          createPromise(position, delay)\n            .then(({ position, delay }) => {\n              Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            })\n            .catch(({ position, delay }) => {\n              Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n              // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n            });\n      } else {\n            createPromise(position, delay + ((position - 1) * formStep))\n              .then(({ position, delay }) => {\n                Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n              // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            })\n              .catch(({ position, delay }) => {\n              Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n              // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n            });\n    }\n  }\n  // evt.currentTarget.reset();\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$formDataSend","document","querySelector","addEventListener","evt","preventDefault","FormData","currentTarget","forEach","value","name","delay1","Number","formStep","step","formAmount","amount","position1","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.56a1a90f.js.map"}